{"version":3,"sources":["components/appHeader.js","components/weather.js","App.js","index.js"],"names":["AppHeader","props","className","taskleft","Weather","useOpenWeather","key","lat","lon","lang","unit","data","isLoading","errorMessage","locationLabel","unitsLabels","temperature","windSpeed","showForecast","App","tasknameRef","createRef","dateRef","timeRef","descRef","useState","taskItem","setTaskItem","uid","setUid","length","ref","type","max","onClick","current","value","newTask","id","name","date","time","description","done","alert","map","t","doneTask","filter","doneTaskHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAWeA,MARf,SAAmBC,GACf,OACI,qBAAIC,UAAU,6CAAd,sBACWD,EAAME,SADjB,yB,wBC8BOC,EA9BC,WAEZ,MAA0CC,yBAAe,CACrDC,IAAK,mCACLC,IAAK,aACLC,IAAK,aACLC,KAAM,KACNC,KAAM,WALFC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,aASzB,OACI,sBAAKX,UAAU,mDAAf,UACI,oBAAIA,UAAU,8BAAd,wCACA,cAAC,IAAD,CACIU,UAAWA,EACXC,aAAcA,EACdF,KAAMA,EACNF,KAAK,KACLK,cAAc,eACdC,YAAa,CAAEC,YAAa,IAAKC,UAAW,QAC5CC,cAAY,QC8DbC,MAjFf,WAEE,IAAIC,EAAcC,sBACdC,EAAUD,sBACVE,EAAUF,sBACVG,EAAUH,sBAGd,EAAgCI,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAsBF,mBAAS,GAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAkCA,OACE,sBAAK3B,UAAU,yCAAf,UACE,cAAC,EAAD,CAAWC,SAAUuB,EAASI,SAC9B,sBAAK5B,UAAU,cAAf,UACE,uBAAOA,UAAU,eAAe6B,IAAKX,EAAaY,KAAK,SACvD,uBAAO9B,UAAU,eAAe6B,IAAKT,EAASU,KAAK,SACnD,uBAAO9B,UAAU,eAAe6B,IAAKR,EAASS,KAAK,SAASC,IAAI,OAChE,uBAAO/B,UAAU,eAAe6B,IAAKP,EAASQ,KAAK,SACnD,wBAAQ9B,UAAU,kBAAkBgC,QAxCpB,WACpB,GAAiC,KAA9Bd,EAAYe,QAAQC,OACM,KAA1Bd,EAAQa,QAAQC,OACU,KAA1Bb,EAAQY,QAAQC,MAAa,CAE5B,IAAMC,EAAU,CACdC,GAAIV,EACJW,KAAMnB,EAAYe,QAAQC,MAC1BI,KAAMlB,EAAQa,QAAQC,MACtBK,KAAK,GAAD,OAAKlB,EAAQY,QAAQC,MAArB,OACJM,YAAalB,EAAQW,QAAQC,MAC7BO,MAAM,GAGRd,EAAOD,EAAI,GACXD,EAAY,GAAD,mBAAKD,GAAL,CAAeW,KAC1BjB,EAAYe,QAAQC,MAAQ,GAC5Bd,EAAQa,QAAQC,MAAQ,GACxBb,EAAQY,QAAQC,MAAQ,GACxBZ,EAAQW,QAAQC,MAAQ,QAGtBQ,MAAM,qDAkBR,0BAEF,wBAAO1C,UAAU,8CAAjB,UAEE,gCACE,+BACE,uCACA,uCACA,sCACA,qDAGJ,gCACGwB,EAASmB,KAAI,SAACC,GAAD,OAAQ,+BAClB,6BAAKA,EAAEP,OACP,6BAAKO,EAAEN,OACP,6BAAKM,EAAEL,OACP,6BAAKK,EAAEJ,cACP,6BACI,wBAAQxC,UAAU,yBAAyBgC,QAAS,kBAjC5C,SAACI,GACvB,IAAMS,EAAWrB,EAASsB,QAAO,SAAAF,GAAC,OAAIA,EAAER,KAAOA,KAC/CX,EAAYoB,GA+B4DE,CAAgBH,EAAER,KAA5E,4BAKZ,cAAC,EAAD,QC5ENY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.51f1d260.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction AppHeader(props){\r\n    return(\r\n        <h3 className=\"bg-primary text-white text-center p-4 mb-1\">\r\n            Tenés {props.taskleft} tareas por hacer!\r\n        </h3>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport ReactWeather, { useOpenWeather } from 'react-open-weather';\r\n\r\n\r\n\r\nconst Weather = () =>{\r\n\r\n    const { data, isLoading, errorMessage } = useOpenWeather({\r\n        key: '824ad010d05db62dcc123514e2bbb76a',\r\n        lat: '-34.599998',\r\n        lon: '-58.450001',\r\n        lang: 'es',\r\n        unit: 'metric', \r\n      });\r\n\r\n    \r\n    return(\r\n        <div className=\"card card-body bg-primary w-100 m-auto mt-5 h-50\">\r\n            <h4 className=\"text-light text-center mb-3\">Tené en cuenta el clima</h4>\r\n            <ReactWeather\r\n                isLoading={isLoading}\r\n                errorMessage={errorMessage}\r\n                data={data}\r\n                lang=\"es\"\r\n                locationLabel=\"Buenos Aires\"\r\n                unitsLabels={{ temperature: 'C', windSpeed: 'Km/h' }}\r\n                showForecast\r\n            />  \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Weather;","import React, {useState, createRef} from 'react';\nimport AppHeader from './components/appHeader'\nimport './App.css'\nimport Weather from './components/weather'\n\n\n\nfunction App() {\n\n  let tasknameRef = createRef();\n  let dateRef = createRef();\n  let timeRef = createRef();\n  let descRef = createRef();\n  \n  \n  const [taskItem, setTaskItem] = useState([])\n  \n  const [uid, setUid] = useState(0)\n  \n  const handleAddTask = () =>{\n    if(tasknameRef.current.value !== '' && \n       dateRef.current.value !== '' && \n       timeRef.current.value !== ''){\n      \n        const newTask = {\n          id: uid,\n          name: tasknameRef.current.value,\n          date: dateRef.current.value,\n          time: `${timeRef.current.value} hs`,\n          description: descRef.current.value,\n          done: false\n        }\n        \n        setUid(uid+1)\n        setTaskItem([...taskItem, newTask])\n        tasknameRef.current.value = ''\n        dateRef.current.value = ''\n        timeRef.current.value = ''\n        descRef.current.value = ''\n    }\n\n    else{ alert('Los campos Tarea, Fecha y Hora son obligatorios!') }\n    \n  }\n\n  const doneTaskHandler = (id) =>{\n    const doneTask = taskItem.filter(t => t.id !== id);\n    setTaskItem(doneTask);\n    \n  }\n  \n  return (\n    <div className=\"App bg-light bg-gradient p-3 m-0 w-100\">\n      <AppHeader taskleft={taskItem.length}/>\n      <div className=\"input-group\">\n        <input className=\"form-control\" ref={tasknameRef} type=\"text\"></input>\n        <input className=\"form-control\" ref={dateRef} type=\"date\"></input>\n        <input className=\"form-control\" ref={timeRef} type=\"number\" max=\"23\"></input>\n        <input className=\"form-control\" ref={descRef} type=\"text\"></input>\n        <button className=\"btn btn-primary\" onClick={handleAddTask}>Añadir</button>\n      </div>\n      <table className=\"table table-striped table-bordered bg-light\">\n        \n        <thead>\n          <tr>\n            <th>Tarea</th>\n            <th>Fecha</th>\n            <th>Hora</th>\n            <th>Descripción</th>\n          </tr>\n        </thead>\n        <tbody>\n          {taskItem.map((t) =>( <tr>\n              <th>{t.name}</th>\n              <th>{t.date}</th>\n              <th>{t.time}</th>\n              <th>{t.description}</th>\n              <th>\n                  <button className=\"btn btn-outline-danger\" onClick={() => doneTaskHandler(t.id)}>X</button>\n              </th>\n          </tr>))}\n        </tbody>\n      </table>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}